install.packages('latex')
install.packages('mitex')
setwd("~/Github/Biden-Inflation-v.-R.O.W")
library(tidyverse)
library(plm)
library(readr)
library(lmtest)
library(sandwich)
library(CausalImpact)
library(Synth)
# Loading in the data
df_raw = read.csv("imf PCPIPCH.csv")
# Renaming column
df_raw = df_raw %>%
rename(country = Inflation.rate..average.consumer.prices..Annual.percent.change.)
# Specifying group of 7 countries and treated country
g7list = c("United States","Canada", "United Kingdom", "Germany", "Italy", "France", "Japan")
treated_country = "United States"
control = setdiff(g7list, treated_country)
# Filtering and reshaping data for G7
df_g7 = df_raw %>%
filter(country %in% g7list) %>%
pivot_longer(-country, names_to = 'year', values_to = "inflation_rate") %>%
mutate(across(c('year'), substr, 2, nchar(year))) %>%
mutate(year = as.integer(year), inflation_rate = as.numeric(inflation_rate))
# Getting desired years
df_g7 = df_g7 %>%
filter(year >= 2011 & year < 2025)
###### Difference-in-Difference #####
#####################################
# Data for diff-in-diff
df = df_g7 %>%
mutate(treated = ifelse(country == treated_country, 1, 0)) %>%
mutate(post = ifelse(year >= 2021, 1, 0),
treated_post = treated*post)
# Fitting OLS model with no FE
formula = as.formula('inflation_rate ~ treated + post + treated_post')
model = lm(formula, data = df)
summary(model)
# Fitting model with FE and clustered SE
df = pdata.frame(df, index = c("country","year"))
fe_formula = as.formula("inflation_rate ~ treated + post + treated_post + factor(country)-1")
fe_model = plm(fe_formula, data = df, model = "within", effect = "individual", index = c("country","year"))
summary(fe_model)
coeftest(fe_model, vcov = vcovHC(fe_model, type = "HC1", cluster = "group"))
##### Causal Impact #####
#########################
# Reshaping data to wide
df_wide = df_g7 %>%
pivot_wider(names_from = country, values_from = inflation_rate) %>%
arrange(year)
# Moving U.S. to 1st column
df_wide = df_wide %>%
select(year, "United States", everything())
df_wide = df_wide %>%
rename(USA = `United States`, UK = `United Kingdom`)
z = zoo(df_wide[-1], order.by = df_wide$year)
# Defining periods
pre_period = c(2011,2020)
post_period = c(2021,2023)
# Causal Impact Analysis
impact = CausalImpact(z, pre_period, post_period)
summary(impact)
plot(impact)
##### Synthetic Control #####
#############################
df_g7$country = recode(df_g7$country, "United States" = "USA", "United Kingdom" = "UK")
df = df_g7
# Unique countries
unique_countries = unique(df$country)
# Removing USA
unique_countries = unique_countries[unique_countries != "USA"]
# Assigning integers
group_id = seq_along(unique_countries)
# Making a mapping dataframe
mapping_df = data.frame(country = c("USA", unique_countries),
group_id = c(0,group_id))
df = merge(df, mapping_df, by = "country", all.x = TRUE)
df$group_id(is.na(df$group_id)) = 0
df$group_id[is.na(df$group_id]) = 0
df$group_id[is.na(df$group_id)] = 0
df$group_id = as.integer(df$group_id)
View(df)
other_col = setdiff(names(df),"group_id")
other_cols = setdiff(names(df),"group_id")
df = df[, c("group_id", other_cols)]
View(df)
df = as.data.frame(df)
dataprep.out = dataprep(foo = df,
time.predictors.prior = 2011:2020,
special.predictors = list(
list("inflation_rate",2011:2020, "mean"),
list("inflation_rate",2016:2020, "mean"),
list("inflation_rate",2020:2020, "mean")),
dependent = "inflation_rate",
unit.variable = "group_id",
unit.names.variable = "country",
time.variable = "year",
treatment.identifier = 0, #treated case
controls.identifier = 1:6,#control cases
time.optimize.ssr = 2011:2020, #time-period to optimize
time.plot = 2011:2024 #entire time period
)
synth.out = synth(dataprep.out)
path.plot(dataprep.res = dataprep.out, synth.res = synth.out, Ylab = "Outcome", Xlab = "Year")
gaps.plot(dataprep.res = dataprep.out, synth.res = synth.out, Ylab = "Outcome", Xlab = "Year")
print(dataprep.out$names.and.numbers)
gap = as.data.frame(dataprep.out$Y1plot- (dataprep.out$Y0plot %*% synth.out$solution.w))
View(gap)
gap$index = as.numeric(rownames(gap))
View(gap)
pre_df = gap[(gap$index >= 2011) & (gap$index <= 2020),]
post_df = gap[gap$index >= 2021,]
View(pre_df)
View(post_df)
colnames(pre_df)[colnames(pre_df)=="0"] = "gap"
colnames(post_df)[colnames(post_df)=="0"] = "gap"
View(pre_df)
print(mean(pre_df$gap))
print(mean(post_df$gap))
###### Difference-in-Difference #####
#####################################
# Data for diff-in-diff
df = df_g7 %>%
mutate(treated = ifelse(country == treated_country, 1, 0)) %>%
mutate(post = ifelse(year >= 2021, 1, 0),
treated_post = treated*post)
# Fitting OLS model with no FE
formula = as.formula('inflation_rate ~ treated + post + treated_post')
model = lm(formula, data = df)
summary(model)
# Fitting model with FE and clustered SE
df = pdata.frame(df, index = c("country","year"))
fe_formula = as.formula("inflation_rate ~ treated + post + treated_post + factor(country)-1")
fe_model = plm(fe_formula, data = df, model = "within", effect = "individual", index = c("country","year"))
summary(fe_model)
coeftest(fe_model, vcov = vcovHC(fe_model, type = "HC1", cluster = "group"))
## Data Shaping ##
# Loading in the data
df_raw = read.csv("imf PCPIPCH.csv")
# Renaming column
df_raw = df_raw %>%
rename(country = Inflation.rate..average.consumer.prices..Annual.percent.change.)
# Specifying group of 7 countries and treated country
g7list = c("United States","Canada", "United Kingdom", "Germany", "Italy", "France", "Japan")
treated_country = "United States"
control = setdiff(g7list, treated_country)
# Filtering and reshaping data for G7
df_g7 = df_raw %>%
filter(country %in% g7list) %>%
pivot_longer(-country, names_to = 'year', values_to = "inflation_rate") %>%
mutate(across(c('year'), substr, 2, nchar(year))) %>%
mutate(year = as.integer(year), inflation_rate = as.numeric(inflation_rate))
# Getting desired years
df_g7 = df_g7 %>%
filter(year >= 2011 & year < 2025)
#Libraries
library(tidyverse)
library(plm)
library(readr)
library(lmtest)
library(sandwich)
library(CausalImpact)
library(Synth)
install.packages("modelsummary")
###### Difference-in-Difference #####
#####################################
# Data for diff-in-diff
df = df_g7 %>%
mutate(treated = ifelse(country == treated_country, 1, 0)) %>%
mutate(post = ifelse(year >= 2021, 1, 0),
treated_post = treated*post)
# Fitting OLS model with no FE
formula = as.formula('inflation_rate ~ treated + post + treated_post')
model = lm(formula, data = df)
modelsummary(model, output = "table.docx")
library(modelsummary)
###### Difference-in-Difference #####
#####################################
# Data for diff-in-diff
df = df_g7 %>%
mutate(treated = ifelse(country == treated_country, 1, 0)) %>%
mutate(post = ifelse(year >= 2021, 1, 0),
treated_post = treated*post)
# Fitting OLS model with no FE
formula = as.formula('inflation_rate ~ treated + post + treated_post')
model = lm(formula, data = df)
modelsummary(model, output = "table.docx")
install.packages(
c("modelsummary", "tinytable", "insight", "performance", "parameters"),
repos = c(
"https://vincentarelbundock.r-universe.dev",
"https://easystats.r-universe.dev"))
install.packages(c("modelsummary", "tinytable", "insight", "performance", "parameters"), repos = c("https://vincentarelbundock.r-universe.dev", "https://easystats.r-universe.dev"))
###### Difference-in-Difference #####
#####################################
# Data for diff-in-diff
df = df_g7 %>%
mutate(treated = ifelse(country == treated_country, 1, 0)) %>%
mutate(post = ifelse(year >= 2021, 1, 0),
treated_post = treated*post)
#Libraries
library(tidyverse)
library(plm)
library(readr)
library(lmtest)
library(sandwich)
library(CausalImpact)
library(Synth)
library(modelsummary)
## Data Shaping ##
# Loading in the data
df_raw = read.csv("imf PCPIPCH.csv")
# Renaming column
df_raw = df_raw %>%
rename(country = Inflation.rate..average.consumer.prices..Annual.percent.change.)
# Specifying group of 7 countries and treated country
g7list = c("United States","Canada", "United Kingdom", "Germany", "Italy", "France", "Japan")
treated_country = "United States"
control = setdiff(g7list, treated_country)
# Filtering and reshaping data for G7
df_g7 = df_raw %>%
filter(country %in% g7list) %>%
pivot_longer(-country, names_to = 'year', values_to = "inflation_rate") %>%
mutate(across(c('year'), substr, 2, nchar(year))) %>%
mutate(year = as.integer(year), inflation_rate = as.numeric(inflation_rate))
# Getting desired years
df_g7 = df_g7 %>%
filter(year >= 2011 & year < 2025)
###### Difference-in-Difference #####
#####################################
# Data for diff-in-diff
df = df_g7 %>%
mutate(treated = ifelse(country == treated_country, 1, 0)) %>%
mutate(post = ifelse(year >= 2021, 1, 0),
treated_post = treated*post)
# Fitting OLS model with no FE
formula = as.formula('inflation_rate ~ treated + post + treated_post')
model = lm(formula, data = df)
summary(model, output = "table.docx")
###### Difference-in-Difference #####
#####################################
# Data for diff-in-diff
df = df_g7 %>%
mutate(treated = ifelse(country == treated_country, 1, 0)) %>%
mutate(post = ifelse(year >= 2021, 1, 0),
treated_post = treated*post)
# Fitting OLS model with no FE
formula = as.formula('inflation_rate ~ treated + post + treated_post')
model = lm(formula, data = df)
modelsummary(model, output = "table.docx")
install.packages("kableExtra")
kbl(model)
library(kableExtra)
kbl(model)
#Libraries
library(tidyverse)
library(plm)
library(readr)
library(lmtest)
library(sandwich)
library(CausalImpact)
library(Synth)
library(modelsummary)
library(fixest)
install.packages("fixest")
#Libraries
library(tidyverse)
library(plm)
library(readr)
library(lmtest)
library(sandwich)
library(CausalImpact)
library(Synth)
library(modelsummary)
library(fixest)
library(stringr)
library(knitr)
library(kableExtra)
###### Difference-in-Difference #####
#####################################
# Data for diff-in-diff
df = df_g7 %>%
mutate(treated = ifelse(country == treated_country, 1, 0)) %>%
mutate(post = ifelse(year >= 2021, 1, 0),
treated_post = treated*post)
# Fitting OLS model with no FE
formula = as.formula('inflation_rate ~ treated + post + treated_post')
model = lm(formula, data = df)
View(model)
model$coefficients
###### Difference-in-Difference #####
#####################################
# Data for diff-in-diff
df = df_g7 %>%
mutate(treated = ifelse(country == treated_country, 1, 0)) %>%
mutate(post = ifelse(year >= 2021, 1, 0),
treated_post = treated*post)
# Fitting OLS model with no FE
formula = as.formula('inflation_rate ~ treated + post + treated_post')
model = lm(formula, data = df)
summary(model)
cm2 = c('(Intercept)' = 'Intercept',
'treated' = 'Treated',
'post' = 'Post',
'treated_post' = "Treated Post")
gm2 <- list(
list("raw" = "nobs", "clean" = "Sample size", "fmt" = 0),
list("raw" = "r.squared", "clean" = "$R^2$", "fmt" = 2),
list("raw" = "adj.r.squared", "clean" = "Adjusted $R^2$", "fmt" = 2))
msummary(model,
vcov = "HC1",
fmt = fmt_statistic(estimate = 3, std.error = 3),
#stars  = c('*' = .1, '**' = 0.05, '***' = .01),
estimate = "{estimate}",
statistic = "[{std.error}]{stars}",
coef_map = cm2,
gof_omit = 'AIC|BIC|RMSE|Within|FE',
gof_map = gm2)
cm2 = c('(Intercept)' = 'Intercept',
'treated' = 'Treated',
'post' = 'Post',
'treated_post' = "Treated Post")
gm2 <- list(
list("raw" = "nobs", "clean" = "Sample size", "fmt" = 0),
list("raw" = "r.squared", "clean" = "$R^2$", "fmt" = 2),
list("raw" = "adj.r.squared", "clean" = "Adjusted $R^2$", "fmt" = 2))
msummary(models,
vcov = "HC1",
fmt = 3,
estimate = "{estimate}",
statistic = "[{std.error}]",
coef_map = cm2,
gof_omit = 'AIC|BIC|RMSE|Within|FE',
gof_map = gm2,
output = "latex",
escape = FALSE
)
cm2 = c('(Intercept)' = 'Intercept',
'treated' = 'Treated',
'post' = 'Post',
'treated_post' = "Treated Post")
gm2 <- list(
list("raw" = "nobs", "clean" = "Sample size", "fmt" = 0),
list("raw" = "r.squared", "clean" = "$R^2$", "fmt" = 2),
list("raw" = "adj.r.squared", "clean" = "Adjusted $R^2$", "fmt" = 2))
msummary(models,
vcov = "HC1",
fmt = 3,
estimate = "{estimate}",
statistic = "[{std.error}]",
coef_map = cm2,
gof_omit = 'AIC|BIC|RMSE|Within|FE',
gof_map = gm2,
output = "latex",
escape = FALSE
)%>%
cat(.,file="my_table.tex")
cm2 = c('(Intercept)' = 'Intercept',
'treated' = 'Treated',
'post' = 'Post',
'treated_post' = "Treated Post")
gm2 <- list(
list("raw" = "nobs", "clean" = "Sample size", "fmt" = 0),
list("raw" = "r.squared", "clean" = "$R^2$", "fmt" = 2),
list("raw" = "adj.r.squared", "clean" = "Adjusted $R^2$", "fmt" = 2))
msummary(models,
vcov = "HC1",
fmt = fmt_statistic(estimate = 3, std.error = 3),
#stars  = c('*' = .1, '**' = 0.05, '***' = .01),
estimate = "{estimate}",
statistic = "[{std.error}]{stars}",
coef_map = cm2,
gof_omit = 'AIC|BIC|RMSE|Within|FE',
gof_map = gm2)
cm2 = c('(Intercept)' = 'Intercept',
'treated' = 'Treated',
'post' = 'Post',
'treated_post' = "Treated Post")
gm2 <- list(
list("raw" = "nobs", "clean" = "Sample size", "fmt" = 0),
list("raw" = "r.squared", "clean" = "$R^2$", "fmt" = 2),
list("raw" = "adj.r.squared", "clean" = "Adjusted $R^2$", "fmt" = 2))
msummary(model,
vcov = "HC1",
fmt = 3,
estimate = "{estimate}",
statistic = "[{std.error}]",
coef_map = cm2,
gof_omit = 'AIC|BIC|RMSE|Within|FE',
gof_map = gm2,
output = "latex",
escape = FALSE
)
cm2 = c('(Intercept)' = 'Intercept',
'treated' = 'Treated',
'post' = 'Post',
'treated_post' = "Treated Post")
gm2 <- list(
list("raw" = "nobs", "clean" = "Sample size", "fmt" = 0),
list("raw" = "r.squared", "clean" = "$R^2$", "fmt" = 2),
list("raw" = "adj.r.squared", "clean" = "Adjusted $R^2$", "fmt" = 2))
msummary(model,
vcov = "HC1",
fmt = 3,
estimate = "{estimate}",
statistic = "[{std.error}]",
coef_map = cm2,
gof_omit = 'AIC|BIC|RMSE|Within|FE',
gof_map = gm2,
output = "latex",
escape = FALSE
)
